{"ast":null,"code":"var _jsxFileName = \"/home/jaishreeram/project3/frontend/src/pages/EditBookPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport API from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditBookPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [book, setBook] = useState({\n    name: \"\",\n    author: \"\",\n    price: \"\" // Default as an empty string for input compatibility  \n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch book details  \n  useEffect(() => {\n    const fetchBookDetails = async () => {\n      try {\n        const response = await API.get(`/books/${id}`);\n        setBook(response.data);\n      } catch (error) {\n        console.error(\"Error fetching book details:\", error);\n        setError(\"Failed to fetch book details. Please try again.\");\n      } finally {\n        setLoading(false); // End loading regardless of success/failure  \n      }\n    };\n    fetchBookDetails();\n  }, [id]);\n\n  // Handle form input changes  \n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setBook(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Update book details  \n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Simple validation to ensure price is a positive number  \n    if (book.price <= 0) {\n      alert(\"Price must be a positive number.\");\n      return;\n    }\n    try {\n      await API.put(`/books/${id}`, book);\n      alert(\"Book updated successfully!\");\n      navigate(\"/boo\");\n    } catch (error) {\n      console.error(\"Error updating book:\", error);\n      alert(\"Failed to update book. Please try again.\");\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: \"Loading book details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"form-label\",\n          children: \"Book Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          name: \"name\",\n          value: book.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"author\",\n          className: \"form-label\",\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"author\",\n          name: \"author\",\n          value: book.author,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          className: \"form-label\",\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: \"price\",\n          name: \"price\",\n          value: book.price,\n          onChange: handleChange,\n          required: true,\n          min: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary ms-2\",\n        onClick: () => navigate(\"/book\"),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(EditBookPage, \"rnl3w46BggvR+yKxnk22IoKaNqw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditBookPage;\nexport default EditBookPage;\nvar _c;\n$RefreshReg$(_c, \"EditBookPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","API","jsxDEV","_jsxDEV","EditBookPage","_s","id","navigate","book","setBook","name","author","price","loading","setLoading","error","setError","fetchBookDetails","response","get","data","console","handleChange","e","value","target","prev","handleSubmit","preventDefault","alert","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","required","min","onClick","_c","$RefreshReg$"],"sources":["/home/jaishreeram/project3/frontend/src/pages/EditBookPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";  \nimport { useParams, useNavigate } from \"react-router-dom\";  \nimport API from \"../api\";  \n\nconst EditBookPage = () => {  \n    const { id } = useParams();  \n    const navigate = useNavigate();  \n\n    const [book, setBook] = useState({  \n        name: \"\",  \n        author: \"\",  \n        price: \"\", // Default as an empty string for input compatibility  \n    });  \n    const [loading, setLoading] = useState(true);  \n    const [error, setError] = useState(null);  \n\n    // Fetch book details  \n    useEffect(() => {  \n        const fetchBookDetails = async () => {  \n            try {  \n                const response = await API.get(`/books/${id}`);  \n                setBook(response.data);  \n            } catch (error) {  \n                console.error(\"Error fetching book details:\", error);  \n                setError(\"Failed to fetch book details. Please try again.\");  \n            } finally {  \n                setLoading(false); // End loading regardless of success/failure  \n            }  \n        };  \n        fetchBookDetails();  \n    }, [id]);  \n\n    // Handle form input changes  \n    const handleChange = (e) => {  \n        const { name, value } = e.target;  \n        setBook((prev) => ({ ...prev, [name]: value }));  \n    };  \n\n    // Update book details  \n    const handleSubmit = async (e) => {  \n        e.preventDefault();  \n\n        // Simple validation to ensure price is a positive number  \n        if (book.price <= 0) {  \n            alert(\"Price must be a positive number.\");  \n            return;  \n        }  \n\n        try {  \n            await API.put(`/books/${id}`, book);  \n            alert(\"Book updated successfully!\");  \n            navigate(\"/boo\");  \n        } catch (error) {  \n            console.error(\"Error updating book:\", error);  \n            alert(\"Failed to update book. Please try again.\");  \n        }  \n    };  \n\n    if (loading) {  \n        return <div className=\"text-center\">Loading book details...</div>;  \n    }  \n\n    if (error) {  \n        return <div className=\"text-center text-danger\">{error}</div>;  \n    }  \n\n    return (  \n        <div className=\"container mt-4\">  \n            <h1>Edit Book</h1>  \n            <form onSubmit={handleSubmit}>  \n                <div className=\"mb-3\">  \n                    <label htmlFor=\"name\" className=\"form-label\">  \n                        Book Name:  \n                    </label>  \n                    <input  \n                        type=\"text\"  \n                        className=\"form-control\"  \n                        id=\"name\"  \n                        name=\"name\"  \n                        value={book.name}  \n                        onChange={handleChange}  \n                        required  \n                    />  \n                </div>  \n                <div className=\"mb-3\">  \n                    <label htmlFor=\"author\" className=\"form-label\">  \n                        Author:  \n                    </label>  \n                    <input  \n                        type=\"text\"  \n                        className=\"form-control\"  \n                        id=\"author\"  \n                        name=\"author\"  \n                        value={book.author}  \n                        onChange={handleChange}  \n                        required  \n                    />  \n                </div>  \n                <div className=\"mb-3\">  \n                    <label htmlFor=\"price\" className=\"form-label\">  \n                        Price:  \n                    </label>  \n                    <input  \n                        type=\"number\"  \n                        className=\"form-control\"  \n                        id=\"price\"  \n                        name=\"price\"  \n                        value={book.price}  \n                        onChange={handleChange}  \n                        required  \n                        min=\"0\" \n                    />  \n                </div>  \n                <button type=\"submit\" className=\"btn btn-success\">  \n                    Save Changes  \n                </button>  \n                <button  \n                    type=\"button\"  \n                    className=\"btn btn-secondary ms-2\"  \n                    onClick={() => navigate(\"/book\")}  \n                >  \n                    Cancel  \n                </button>  \n            </form>  \n        </div>  \n    );  \n};  \n\nexport default EditBookPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}